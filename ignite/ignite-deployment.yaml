apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  labels:
    app: ignite
  name: ignite
  namespace: default
spec:
  serviceName: ignite
  replicas: 3
  selector:
    matchLabels:
      app: ignite
  template:
    metadata:
      labels:
        app: ignite
    spec:
      serviceAccountName: ignite
      containers:
      - env:
        - name: OPTION_LIBS
          value: ignite-kubernetes,ignite-rest-http
        - name: CONFIG_URI
          value: http://nginx-0.nginx.default.svc.cluster.local:80/optimized-persistent-storage.xml
        - name: IGNITE_QUIET
          value: "false"
        - name: JVM_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms10g -Xmx10g -XX:NewSize=512m -XX:SurvivorRatio=6 -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+AlwaysPreTouch -XX:CMSInitiatingOccupancyFraction=30 -XX:+UseCMSInitiatingOccupancyOnly -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled -XX:ConcGCThreads=16 -XX:+UseTLAB -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -XX:+DisableExplicitGC"
        image: docker.io/apacheignite/ignite:2.6.0
        imagePullPolicy: Always
        name: ignite
        ports:
        - containerPort: 11211 # REST port number.
        - containerPort: 47100 # communication SPI port number.
        - containerPort: 47500 # discovery SPI port number.
        - containerPort: 49112 # JMX port number.
        - containerPort: 10800 # SQL port number.
        - containerPort: 10900 # Thin clients port number.
        - containerPort: 47501
        - containerPort: 47502
        - containerPort: 8080 # REST port number.
        volumeMounts:
        - mountPath: /opt/ignite/apache-ignite-fabric/work #/data/ignite #/opt/ignite/apache-ignite-fabric/work/db
          name: ignite-data
      nodeSelector:
        worker: "true"
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: ignite-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ignite
      resources:
        requests:
          storage: 99Gi
